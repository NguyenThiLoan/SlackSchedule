

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "SlackSchedule\Web.config"
//     Connection String Name: "DatabaseContext"
//     Connection String:      "Data Source=.;Initial Catalog=SlackSchedule;Persist Security Info=False;User ID=sa;password=**zapped**;;"
// ------------------------------------------------------------------------------------------------
// Database Edition        : Enterprise Edition (64-bit)
// Database Engine Edition : Enterprise
// Database Version        : 12.0.4100.1

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace SlackSchedule.Models
{
    using Newtonsoft.Json;

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class DatabaseContext : System.Data.Entity.DbContext, EntityFramework.DbContextScope.Interfaces.IDbContext
    {
        public System.Data.Entity.DbSet<Customer> Customers { get; set; } // Customers
        public System.Data.Entity.DbSet<Member> Members { get; set; } // Members
        public System.Data.Entity.DbSet<MstMemberRole> MstMemberRoles { get; set; } // mstMemberRole
        public System.Data.Entity.DbSet<MstProjectState> MstProjectStates { get; set; } // mstProjectState
        public System.Data.Entity.DbSet<PersonalTask> PersonalTasks { get; set; } // PersonalTasks
        public System.Data.Entity.DbSet<Project> Projects { get; set; } // Projects
        public System.Data.Entity.DbSet<ProjectMember> ProjectMembers { get; set; } // ProjectMembers
        public System.Data.Entity.DbSet<ProjectTask> ProjectTasks { get; set; } // ProjectTasks

        static DatabaseContext()
        {
            System.Data.Entity.Database.SetInitializer<DatabaseContext>(null);
        }

        public DatabaseContext()
            : base("Name=DatabaseContext")
        {
            InitializePartial();
        }

        public DatabaseContext(string connectionString)
            : base(connectionString)
        {
            InitializePartial();
        }

        public DatabaseContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
            InitializePartial();
        }

        public DatabaseContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
            InitializePartial();
        }

        public DatabaseContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
            InitializePartial();
        }

        protected override void Dispose(bool disposing)
        {
            DisposePartial(disposing);
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new CustomerConfiguration());
            modelBuilder.Configurations.Add(new MemberConfiguration());
            modelBuilder.Configurations.Add(new MstMemberRoleConfiguration());
            modelBuilder.Configurations.Add(new MstProjectStateConfiguration());
            modelBuilder.Configurations.Add(new PersonalTaskConfiguration());
            modelBuilder.Configurations.Add(new ProjectConfiguration());
            modelBuilder.Configurations.Add(new ProjectMemberConfiguration());
            modelBuilder.Configurations.Add(new ProjectTaskConfiguration());

            OnModelCreatingPartial(modelBuilder);
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new CustomerConfiguration(schema));
            modelBuilder.Configurations.Add(new MemberConfiguration(schema));
            modelBuilder.Configurations.Add(new MstMemberRoleConfiguration(schema));
            modelBuilder.Configurations.Add(new MstProjectStateConfiguration(schema));
            modelBuilder.Configurations.Add(new PersonalTaskConfiguration(schema));
            modelBuilder.Configurations.Add(new ProjectConfiguration(schema));
            modelBuilder.Configurations.Add(new ProjectMemberConfiguration(schema));
            modelBuilder.Configurations.Add(new ProjectTaskConfiguration(schema));
            return modelBuilder;
        }

        partial void InitializePartial();
        partial void DisposePartial(bool disposing);
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
    #endregion

    #region Database context factory

    public partial class DatabaseContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<DatabaseContext>
    {
        public DatabaseContext Create()
        {
            return new DatabaseContext();
        }
    }

    #endregion

    #region POCO classes

    // Customers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Customer
    {
        public int Id { get; set; } // Id (Primary key)
        public string CustomerName { get; set; } // CustomerName (length: 100)
        public System.DateTime? UpdatedAt { get; set; } // UpdatedAt
        public System.DateTime? DeletedAt { get; set; } // DeletedAt

        // Reverse navigation

        /// <summary>
        /// Child Projects where [Projects].[CustomerId] point to this entity (FK_Projects_Customers)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Project> Projects { get; set; } // Projects.FK_Projects_Customers

        public Customer()
        {
            Projects = new System.Collections.Generic.List<Project>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Members
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Member
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 100)
        public string Email { get; set; } // Email (length: 500)
        public string SlackId { get; set; } // SlackID (length: 100)
        public string Password { get; set; } // Password (length: 100)
        public bool Active { get; set; } // Active
        public System.DateTime? LastLogin { get; set; } // LastLogin
        public System.DateTime? UpdatedAt { get; set; } // UpdatedAt
        public System.DateTime? CreatedAt { get; set; } // CreatedAt

        // Reverse navigation

        /// <summary>
        /// Child PersonalTasks where [PersonalTasks].[MemberId] point to this entity (FK_PersonalTasks_Members)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<PersonalTask> PersonalTasks { get; set; } // PersonalTasks.FK_PersonalTasks_Members
        /// <summary>
        /// Child Projects where [Projects].[LeaderId] point to this entity (FK_Projects_Members)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Project> Projects { get; set; } // Projects.FK_Projects_Members
        /// <summary>
        /// Child ProjectMembers where [ProjectMembers].[MemberId] point to this entity (FK_ProjectMembers_Members)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ProjectMember> ProjectMembers { get; set; } // ProjectMembers.FK_ProjectMembers_Members
        /// <summary>
        /// Child ProjectTasks where [ProjectTasks].[MemberId] point to this entity (FK_ProjectTasks_Members)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ProjectTask> ProjectTasks { get; set; } // ProjectTasks.FK_ProjectTasks_Members

        public Member()
        {
            Active = false;
            PersonalTasks = new System.Collections.Generic.List<PersonalTask>();
            ProjectMembers = new System.Collections.Generic.List<ProjectMember>();
            Projects = new System.Collections.Generic.List<Project>();
            ProjectTasks = new System.Collections.Generic.List<ProjectTask>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // mstMemberRole
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class MstMemberRole
    {
        public int Id { get; set; } // Id (Primary key)
        public string RoleName { get; set; } // RoleName (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child ProjectMembers where [ProjectMembers].[RoleId] point to this entity (FK_ProjectMembers_mstMemberRole)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ProjectMember> ProjectMembers { get; set; } // ProjectMembers.FK_ProjectMembers_mstMemberRole

        public MstMemberRole()
        {
            ProjectMembers = new System.Collections.Generic.List<ProjectMember>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // mstProjectState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class MstProjectState
    {
        public int Id { get; set; } // Id (Primary key)
        public string StateName { get; set; } // StateName (length: 50)

        // Reverse navigation

        /// <summary>
        /// Child Projects where [Projects].[StateId] point to this entity (FK_Projects_mstProjectState)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<Project> Projects { get; set; } // Projects.FK_Projects_mstProjectState

        public MstProjectState()
        {
            Projects = new System.Collections.Generic.List<Project>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // PersonalTasks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class PersonalTask
    {
        public long Id { get; set; } // Id (Primary key)
        public int? MemberId { get; set; } // MemberId
        public string Title { get; set; } // Title (length: 500)
        public string Content { get; set; } // Content
        public System.DateTime? UpdatedAt { get; set; } // UpdatedAt
        public System.DateTime? CreatedAt { get; set; } // CreatedAt

        // Foreign keys

        /// <summary>
        /// Parent Member pointed by [PersonalTasks].([MemberId]) (FK_PersonalTasks_Members)
        /// </summary>
        [JsonIgnore]
        public virtual Member Member { get; set; } // FK_PersonalTasks_Members

        public PersonalTask()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // Projects
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class Project
    {
        public int Id { get; set; } // Id (Primary key)
        public string ProjectName { get; set; } // ProjectName (length: 200)
        public System.DateTime? StartDate { get; set; } // StartDate
        public System.DateTime? EndDate { get; set; } // EndDate
        public int? CustomerId { get; set; } // CustomerId
        public int? LeaderId { get; set; } // LeaderId
        public int? StateId { get; set; } // StateId
        public System.DateTime? UpdatedAt { get; set; } // UpdatedAt
        public System.DateTime? CreatedAt { get; set; } // CreatedAt

        // Reverse navigation

        /// <summary>
        /// Child ProjectMembers where [ProjectMembers].[ProjectId] point to this entity (FK_ProjectMembers_Projects)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ProjectMember> ProjectMembers { get; set; } // ProjectMembers.FK_ProjectMembers_Projects
        /// <summary>
        /// Child ProjectTasks where [ProjectTasks].[ProjectId] point to this entity (FK_ProjectTasks_Projects)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ProjectTask> ProjectTasks { get; set; } // ProjectTasks.FK_ProjectTasks_Projects

        // Foreign keys

        /// <summary>
        /// Parent Customer pointed by [Projects].([CustomerId]) (FK_Projects_Customers)
        /// </summary>
        [JsonIgnore]
        public virtual Customer Customer { get; set; } // FK_Projects_Customers

        /// <summary>
        /// Parent Member pointed by [Projects].([LeaderId]) (FK_Projects_Members)
        /// </summary>
        [JsonIgnore]
        public virtual Member Member { get; set; } // FK_Projects_Members

        /// <summary>
        /// Parent MstProjectState pointed by [Projects].([StateId]) (FK_Projects_mstProjectState)
        /// </summary>
        [JsonIgnore]
        public virtual MstProjectState MstProjectState { get; set; } // FK_Projects_mstProjectState

        public Project()
        {
            ProjectMembers = new System.Collections.Generic.List<ProjectMember>();
            ProjectTasks = new System.Collections.Generic.List<ProjectTask>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ProjectMembers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class ProjectMember
    {
        public int ProjectId { get; set; } // ProjectId (Primary key)
        public int MemberId { get; set; } // MemberId (Primary key)
        public int? RoleId { get; set; } // RoleId

        // Foreign keys

        /// <summary>
        /// Parent Member pointed by [ProjectMembers].([MemberId]) (FK_ProjectMembers_Members)
        /// </summary>
        [JsonIgnore]
        public virtual Member Member { get; set; } // FK_ProjectMembers_Members

        /// <summary>
        /// Parent MstMemberRole pointed by [ProjectMembers].([RoleId]) (FK_ProjectMembers_mstMemberRole)
        /// </summary>
        [JsonIgnore]
        public virtual MstMemberRole MstMemberRole { get; set; } // FK_ProjectMembers_mstMemberRole

        /// <summary>
        /// Parent Project pointed by [ProjectMembers].([ProjectId]) (FK_ProjectMembers_Projects)
        /// </summary>
        [JsonIgnore]
        public virtual Project Project { get; set; } // FK_ProjectMembers_Projects

        public ProjectMember()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    // ProjectTasks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class ProjectTask
    {
        public long Id { get; set; } // Id (Primary key)
        public int? ProjectId { get; set; } // ProjectId
        public int? MemberId { get; set; } // MemberId
        public string TaskName { get; set; } // TaskName (length: 500)
        public System.DateTime? StartTime { get; set; } // StartTime
        public System.DateTime? EndTime { get; set; } // EndTime
        public int? EstimateTime { get; set; } // EstimateTime
        public int? Finish { get; set; } // Finish
        public int? RealTime { get; set; } // RealTime
        public int? StateId { get; set; } // StateId
        public System.DateTime? UpdatedAt { get; set; } // UpdatedAt
        public System.DateTime? CreatedAt { get; set; } // CreatedAt

        // Foreign keys

        /// <summary>
        /// Parent Member pointed by [ProjectTasks].([MemberId]) (FK_ProjectTasks_Members)
        /// </summary>
        [JsonIgnore]
        public virtual Member Member { get; set; } // FK_ProjectTasks_Members

        /// <summary>
        /// Parent Project pointed by [ProjectTasks].([ProjectId]) (FK_ProjectTasks_Projects)
        /// </summary>
        [JsonIgnore]
        public virtual Project Project { get; set; } // FK_ProjectTasks_Projects

        public ProjectTask()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

    #endregion

    #region POCO Configuration

    // Customers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class CustomerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Customer>
    {
        public CustomerConfiguration()
            : this("dbo")
        {
        }

        public CustomerConfiguration(string schema)
        {
            ToTable("Customers", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CustomerName).HasColumnName(@"CustomerName").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.UpdatedAt).HasColumnName(@"UpdatedAt").HasColumnType("datetime").IsOptional();
            Property(x => x.DeletedAt).HasColumnName(@"DeletedAt").HasColumnType("datetime").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Members
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class MemberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Member>
    {
        public MemberConfiguration()
            : this("dbo")
        {
        }

        public MemberConfiguration(string schema)
        {
            ToTable("Members", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar").IsRequired().HasMaxLength(500);
            Property(x => x.SlackId).HasColumnName(@"SlackID").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.Active).HasColumnName(@"Active").HasColumnType("bit").IsRequired();
            Property(x => x.LastLogin).HasColumnName(@"LastLogin").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdatedAt).HasColumnName(@"UpdatedAt").HasColumnType("datetime").IsOptional();
            Property(x => x.CreatedAt).HasColumnName(@"CreatedAt").HasColumnType("datetime").IsOptional();
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // mstMemberRole
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class MstMemberRoleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MstMemberRole>
    {
        public MstMemberRoleConfiguration()
            : this("dbo")
        {
        }

        public MstMemberRoleConfiguration(string schema)
        {
            ToTable("mstMemberRole", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RoleName).HasColumnName(@"RoleName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // mstProjectState
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class MstProjectStateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<MstProjectState>
    {
        public MstProjectStateConfiguration()
            : this("dbo")
        {
        }

        public MstProjectStateConfiguration(string schema)
        {
            ToTable("mstProjectState", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.StateName).HasColumnName(@"StateName").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // PersonalTasks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class PersonalTaskConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PersonalTask>
    {
        public PersonalTaskConfiguration()
            : this("dbo")
        {
        }

        public PersonalTaskConfiguration(string schema)
        {
            ToTable("PersonalTasks", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.MemberId).HasColumnName(@"MemberId").HasColumnType("int").IsOptional();
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.Content).HasColumnName(@"Content").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.UpdatedAt).HasColumnName(@"UpdatedAt").HasColumnType("datetime").IsOptional();
            Property(x => x.CreatedAt).HasColumnName(@"CreatedAt").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Member).WithMany(b => b.PersonalTasks).HasForeignKey(c => c.MemberId).WillCascadeOnDelete(false); // FK_PersonalTasks_Members
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // Projects
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class ProjectConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Project>
    {
        public ProjectConfiguration()
            : this("dbo")
        {
        }

        public ProjectConfiguration(string schema)
        {
            ToTable("Projects", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProjectName).HasColumnName(@"ProjectName").HasColumnType("nvarchar").IsOptional().HasMaxLength(200);
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsOptional();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CustomerId).HasColumnName(@"CustomerId").HasColumnType("int").IsOptional();
            Property(x => x.LeaderId).HasColumnName(@"LeaderId").HasColumnType("int").IsOptional();
            Property(x => x.StateId).HasColumnName(@"StateId").HasColumnType("int").IsOptional();
            Property(x => x.UpdatedAt).HasColumnName(@"UpdatedAt").HasColumnType("datetime").IsOptional();
            Property(x => x.CreatedAt).HasColumnName(@"CreatedAt").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Customer).WithMany(b => b.Projects).HasForeignKey(c => c.CustomerId).WillCascadeOnDelete(false); // FK_Projects_Customers
            HasOptional(a => a.Member).WithMany(b => b.Projects).HasForeignKey(c => c.LeaderId).WillCascadeOnDelete(false); // FK_Projects_Members
            HasOptional(a => a.MstProjectState).WithMany(b => b.Projects).HasForeignKey(c => c.StateId).WillCascadeOnDelete(false); // FK_Projects_mstProjectState
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProjectMembers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class ProjectMemberConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProjectMember>
    {
        public ProjectMemberConfiguration()
            : this("dbo")
        {
        }

        public ProjectMemberConfiguration(string schema)
        {
            ToTable("ProjectMembers", schema);
            HasKey(x => new { x.ProjectId, x.MemberId });

            Property(x => x.ProjectId).HasColumnName(@"ProjectId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.MemberId).HasColumnName(@"MemberId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.RoleId).HasColumnName(@"RoleId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasOptional(a => a.MstMemberRole).WithMany(b => b.ProjectMembers).HasForeignKey(c => c.RoleId).WillCascadeOnDelete(false); // FK_ProjectMembers_mstMemberRole
            HasRequired(a => a.Member).WithMany(b => b.ProjectMembers).HasForeignKey(c => c.MemberId).WillCascadeOnDelete(false); // FK_ProjectMembers_Members
            HasRequired(a => a.Project).WithMany(b => b.ProjectMembers).HasForeignKey(c => c.ProjectId).WillCascadeOnDelete(false); // FK_ProjectMembers_Projects
            InitializePartial();
        }
        partial void InitializePartial();
    }

    // ProjectTasks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.1.0")]
    public partial class ProjectTaskConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProjectTask>
    {
        public ProjectTaskConfiguration()
            : this("dbo")
        {
        }

        public ProjectTaskConfiguration(string schema)
        {
            ToTable("ProjectTasks", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProjectId).HasColumnName(@"ProjectId").HasColumnType("int").IsOptional();
            Property(x => x.MemberId).HasColumnName(@"MemberId").HasColumnType("int").IsOptional();
            Property(x => x.TaskName).HasColumnName(@"TaskName").HasColumnType("nvarchar").IsOptional().HasMaxLength(500);
            Property(x => x.StartTime).HasColumnName(@"StartTime").HasColumnType("datetime").IsOptional();
            Property(x => x.EndTime).HasColumnName(@"EndTime").HasColumnType("datetime").IsOptional();
            Property(x => x.EstimateTime).HasColumnName(@"EstimateTime").HasColumnType("int").IsOptional();
            Property(x => x.Finish).HasColumnName(@"Finish").HasColumnType("int").IsOptional();
            Property(x => x.RealTime).HasColumnName(@"RealTime").HasColumnType("int").IsOptional();
            Property(x => x.StateId).HasColumnName(@"StateId").HasColumnType("int").IsOptional();
            Property(x => x.UpdatedAt).HasColumnName(@"UpdatedAt").HasColumnType("datetime").IsOptional();
            Property(x => x.CreatedAt).HasColumnName(@"CreatedAt").HasColumnType("datetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Member).WithMany(b => b.ProjectTasks).HasForeignKey(c => c.MemberId).WillCascadeOnDelete(false); // FK_ProjectTasks_Members
            HasOptional(a => a.Project).WithMany(b => b.ProjectTasks).HasForeignKey(c => c.ProjectId).WillCascadeOnDelete(false); // FK_ProjectTasks_Projects
            InitializePartial();
        }
        partial void InitializePartial();
    }

    #endregion

}
// </auto-generated>

